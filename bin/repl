#!/usr/bin/env node
'use strict'

process.title = 'equation'
var readline = require('node-color-readline')
var chalk = require('chalk')
var Context = require('../')
var colorize = require('./colorize')
var context = new Context()
chalk.enabled = true

if (require.main === module) { main() }

function main () {
  var input = process.stdin
  var output = process.stderr

  var vars = {}

  vars.A = context.eval('[[1,2,3],[4,5,6]]')
  vars.B = context.eval('[[1,2,3,4],[5,6,7,8], [9,0,1,2]]')

  Context.Definition.DEBUG_MODE = true

  if (process.argv[2] === '-e') {
    var expr = context.eval(process.argv.slice(3).join(' '), vars)
    output.write(expr.dump())
    output.write('\n')
    return
  }
  var i = 1

  function exec (cmd) {
    var expr = context.eval(cmd, vars)
    if (!expr) return
    var def = expr.head().def()
    if (def && def === Context.builtin.Set) {
      var a = expr.args()[0]
      if (a && a.head().def() === Context.builtin.Symbol) {
        expr = expr.args()[1]
        vars[a._value] = expr
      }
    }
    vars['ans'] = expr
    output.write(expr.dump())
    output.write('\n')
    i++
  }

  var rl = readline.createInterface({
    input: input,
    output: output,
    colorize: function (str) {
      return colorize(str, context)
    }
  })

  rl.on('line', function (cmd) {
    exec(cmd)
    rl.prompt()
  })

  rl.prompt()
}
